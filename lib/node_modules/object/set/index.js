module.exports = set;
var u,
    simpleSet = require('object/set/simple'),
    toPath = require('to/path'),
    isArray = require('is/array'),
    forEachEnd = require('array/base/for-each-end'),
    isNil = require('is/nil');

function set(target_, path, value_) {
    var p, length, target = target_,
        value = value_;
    if (!target) {
        return u;
    }
    p = isArray(path) ? path : toPath(path);
    length = p.length;
    if (length > 1) {
        forEachEnd(p, function traverser(key, index, list) {
            if (isNil(target)) {
                value = false;
                return true;
            } else if (index < list.length - 1) {
                target = target[key];
            } else {
                simpleSet(target, value, key);
                value = true;
                return true;
            }
        });
        return value;
    } else if (length) {
        return simpleSet(target, value, p[0]);
    } else {
        return false;
    }
}